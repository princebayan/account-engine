#Workflow name
name: Account Engine Pipeline
on:
  #Manually trigger workflow runs
  workflow_dispatch:
  #Trigger the workflow on push from the main branch
  push:
    branches:
      - develop

# Environment variables available to all jobs and steps in this workflow
env:
  GITHUB_SHA: ${{ github.sha }}
  DOCKER_IMAGE: test/account-engine:1.0.0-dev
  DEPLOYMENT_NAME: account-engine
  REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
  REMOTE_USERNAME: ${{ secrets.REMOTE_USERNAME }}
  REMOTE_PASSWORD: ${{ secrets.REMOTE_PASSWORD }}
  REMOTE_PORT: ${{ secrets.REMOTE_PORT }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'zulu' # See 'Supported distributions' for available options

      # Check id develop branch
      - name: "Copy Configuration for UAT"
        run: |
          ls
          cp src/main/resources/application-uat.yaml application-uat.yaml

      - name: Debuging secrets
        env:
          TWINE_PASSWORD: ${{ secrets.REMOTE_PASSWORD }}
        run: |
          echo KEY: '${TWINE_PASSWORD}'

      - name: Build with Gradle
        run: ./gradlew build


      # Build the Docker image
      - name: Build/Publish docker image
        working-directory: ${{ env.DIR }}
        run: |
          ls -a
          docker build -t "$DOCKER_IMAGE" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" .

          docker save -o account-engine-image.tar "$DOCKER_IMAGE"

      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USERNAME }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          port: ${{ secrets.REMOTE_PORT }}
          source: "account-engine-image.tar"
          target: "images"

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USERNAME }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          port: ${{ secrets.REMOTE_PORT }}
          script: |
            ls -a
            cd images
            ls -a
            docker load -i account-engine-image.tar
            docker stop account-engine
            docker rm account-engine
            docker run -d \
              -p 8081:8080 \
              --name account-engine \
            test/account-engine:1.0.0-dev


